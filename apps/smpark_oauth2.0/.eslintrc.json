{
  "extends": ["../../.eslintrc.json"],
  "ignorePatterns": ["!**/*"],
  "plugins": ["@nx"],
  "overrides": [
    {
      "files": ["*.js"],
      "plugins": ["prettier"],
      "env": {
        "browser": true
      },
      "extends": ["prettier"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "prettier/prettier": "error",
        "semi": "error",
        "eqeqeq": "error",
        "prefer-const": "error",
        "curly": "error",
        "no-console": "warn",
        "no-trailing-spaces": "error",
        "eol-last": ["error", "always"],
        "no-multiple-empty-lines": ["error", { "max": 1 }],
        "no-var": "error",
        "no-undef": "error",
        "no-unused-vars": "warn",
        "prefer-arrow-callback": "error",
        "arrow-spacing": ["error", { "before": true, "after": true }]
      }
    },
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["tsconfig.base.json"]
      },
      "plugins": ["@typescript-eslint", "prettier"],
      "extends": ["prettier"],
      "settings": {
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
            "project": "tsconfig.base.json"
          }
        }
      },
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "varsIgnorePattern": "^_",
            "argsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/array-type": ["error", { "default": "array-simple" }],
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "no-restricted-imports": [
          "error",
          {
            "patterns": [".*"]
          }
        ]
      }
    },
    {
      "files": ["cypress/**/*.js", "cypress/**/*.ts", "**/*.cy.js", "**/*.cy.ts"],
      "plugins": ["cypress"],
      "env": {
        "browser": true,
        "cypress/globals": true
      },
      "extends": ["plugin:cypress/recommended"],
      "rules": {
        "cypress/no-assigning-return-values": "error",
        "cypress/no-unnecessary-waiting": "error",
        "cypress/assertion-before-screenshot": "warn",
        "cypress/no-force": "warn",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "off"
      }
    }
  ]
}
