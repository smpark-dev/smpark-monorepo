name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: self-hosted
    outputs:
      affected: ${{ steps.set-affected.outputs.affected }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20.14.0
      - name: Enable Corepack
        run: corepack enable
      - uses: nrwl/nx-set-shas@v4
      - id: set-affected
        run: |
          affected=$(yarn nx show projects --type app --affected --json)
          echo "affected=$affected" >> $GITHUB_OUTPUT

  build:
    needs: setup
    if: needs.setup.outputs.affected != '[]'
    runs-on: self-hosted
    strategy:
      matrix:
        project: ${{ fromJson(needs.setup.outputs.affected) }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Setup project
        run: |
          if [ "${{ matrix.project }}" == "smpark-oauth2.0" ]; then
            envsubst < .github/env-templates/smpark-oauth2.0.env > apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          elif [ "${{ matrix.project }}" == "smpark-resource" ]; then
            envsubst < .github/env-templates/smpark-resource.env > apps/smpark-resource/.env.${{ vars.NODE_ENV }}
          elif [ "${{ matrix.project }}" == "smpark-space" ]; then
            envsubst < .github/env-templates/smpark-space.env > apps/smpark-space/.env.${{ vars.NODE_ENV }}
            # LFS setup for smpark-space
            git lfs pull
          fi
      
      - name: Cache LFS
        if: matrix.project == 'smpark-space'
        uses: actions/cache@v4
        with:
          path: .git/lfs/objects
          key: ${{ runner.os }}-lfs-${{ hashFiles('.gitattributes') }}
          restore-keys: |
            ${{ runner.os }}-lfs-
      
      - name: Cache Next.js
        if: matrix.project == 'smpark-space'
        uses: actions/cache@v4
        with:
          path: apps/smpark-space/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('apps/smpark-space/**.[jt]s', 'apps/smpark-space/**.[jt]sx') }}
      
      - name: Cache NX
        uses: actions/cache@v4
        with:
          path: .nx-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nx-
      
      - name: Lint
        run: yarn nx lint ${{ matrix.project }}
      
      - name: Build
        run: yarn nx build:prod ${{ matrix.project }}
      
      - name: Transfer .env files to Windows Desktop
        run: |
          scp "./apps/${{ matrix.project }}/.env.${{ vars.NODE_ENV }}" ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_NOIP_HOSTNAME }}:D:/
      
      - name: Get project version
        id: get-version
        run: |
          LATEST_TAG=$(git describe --tags --match "${{ matrix.project }}/v*" --abbrev=0 2>/dev/null || echo "${{ matrix.project }}/v1.0.0")
          VERSION=${LATEST_TAG#*/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Latest tag: $LATEST_TAG"
      
      - name: Deploy to Windows Desktop
        run: |
          if [ "${{ matrix.project }}" == "smpark-oauth2.0" ]; then
            PORT="${{ vars.OAUTH_NGINX_PORT }}":"${{ vars.OAUTH_APP_PORT }}"
          elif [ "${{ matrix.project }}" == "smpark-resource" ]; then
            PORT="${{ vars.RESOURCE_NGINX_PORT }}":"${{ vars.RESOURCE_APP_PORT }}"
          elif [ "${{ matrix.project }}" == "smpark-space" ]; then
            PORT="${{ vars.SPACE_NGINX_PORT }}":"${{ vars.SPACE_APP_PORT }}"
          else
            echo "Unknown project: ${{ matrix.project }}"
            exit 1
          fi
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_NOIP_HOSTNAME }} "cd /d D: && deploy.bat "${{ secrets.DOCKER_USERNAME }}" "${{ secrets.DOCKER_TOKEN }}" "${{ matrix.project }}" "$VERSION" "$PORT" "${{ vars.NODE_ENV }}""
