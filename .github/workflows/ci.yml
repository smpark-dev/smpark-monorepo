name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  main:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20.14.0
      
      - uses: nrwl/nx-set-shas@v4
      
      - name: Enable Corepack
        run: corepack enable

      - name: Affected project
        id: affected
        run: |
          affected=$(yarn nx show projects --affected)
          echo "영향받은 프로젝트:"
          echo "$affected"
          echo "affected<<EOF" >> $GITHUB_OUTPUT
          echo "$affected" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create environment file
        run: |
          while IFS= read -r project
          do
            echo "처리 중인 프로젝트: $project"
            if [[ "$project" == "smpark-space" ]]; then
              echo "space 프로젝트에 대한 환경 변수 파일 생성"
              cat << EOF > apps/$project/.env.${{ vars.NODE_ENV }}
              # space 프로젝트에 필요한 환경 변수들
              EOF
            elif [[ "$project" == "smpark-oauth2.0" ]]; then
              echo "oauth2.0 프로젝트에 대한 환경 변수 파일 생성"
              cat << EOF > apps/$project/.env.${{ vars.NODE_ENV }}
              LOGIN_EXPIRES_IN=${{ secrets.LOGIN_EXPIRES_IN }}
              LOGIN_JWT_SECRET_KEY=${{ secrets.LOGIN_JWT_SECRET_KEY }}
              MONGO_DATABASE_NAME=${{ secrets.MONGO_DATABASE_NAME }}
              MONGO_DATABASE_PASSWORD=${{ secrets.MONGO_DATABASE_PASSWORD }}
              MONGO_DATABASE_SESSION_COLLECTION=${{ secrets.MONGO_DATABASE_SESSION_COLLECTION }}
              MONGO_DATABASE_SESSION_KEY=${{ secrets.MONGO_DATABASE_SESSION_KEY }}
              MONGO_DATABASE_URI=${{ secrets.MONGO_DATABASE_URI }}
              MONGO_DATABASE_USER=${{ secrets.MONGO_DATABASE_USER }}
              OAUTH_ACCESS_SECRET_KEY=${{ secrets.OAUTH_ACCESS_SECRET_KEY }}
              OAUTH_ACCESS_TOKEN_EXPIRES_IN=${{ secrets.OAUTH_ACCESS_TOKEN_EXPIRES_IN }}
              OAUTH_CODE_EXPIRES_IN=${{ secrets.OAUTH_CODE_EXPIRES_IN }}
              OAUTH_REFRESH_SECRET_KEY=${{ secrets.OAUTH_REFRESH_SECRET_KEY }}
              OAUTH_REFRESH_TOKEN_EXPIRES_IN=${{ secrets.OAUTH_REFRESH_TOKEN_EXPIRES_IN }}
              NODE_ENV=${{ vars.NODE_ENV }}
              OAUTH_ISSUER=${{ vars.OAUTH_ISSUER }}
              NGINX_PORT=${{ vars.NGINX_PORT }}
              APP_PORT=${{ vars.APP_PORT }}
              OAUTH_VERSION=${{ vars.OAUTH_VERSION }}
              EOF
            fi
          done <<< "${{ steps.affected.outputs.affected }}"

      - name: Display environment file (for debugging)
        run: |
          while IFS= read -r project
          do
            env_file_path="apps/$project/.env.${{ vars.NODE_ENV }}"
            if [ -f "$env_file_path" ]; then
              echo "$project .env.${{ vars.NODE_ENV }} 파일 내용:"
              cat "$env_file_path" | sed 's/^/  /'
            else
              echo "$project에 대한 .env.${{ vars.NODE_ENV }} 파일이 생성되지 않았습니다."
            fi
          done <<< "${{ steps.affected.outputs.affected }}"

      - run: yarn nx affected -t build:prod