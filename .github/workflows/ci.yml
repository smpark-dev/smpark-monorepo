name: CI

on:
  push:
    branches:
      - main
  pull_request: 
    branches:
      - main

jobs:
  main:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
    
      - uses: actions/setup-node@v4
        with:
          node-version: 20.14.0
      
      - name: Enable Corepack
        run: corepack enable
        

      - name: Create oauth2.0 environment file
        run: |
          echo "LOGIN_EXPIRES_IN=${{ secrets.LOGIN_EXPIRES_IN }}" > apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "LOGIN_JWT_SECRET_KEY=${{ secrets.LOGIN_JWT_SECRET_KEY }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "MONGO_DATABASE_NAME=${{ secrets.MONGO_DATABASE_NAME }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "MONGO_DATABASE_PASSWORD=${{ secrets.MONGO_DATABASE_PASSWORD }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "MONGO_DATABASE_SESSION_COLLECTION=${{ secrets.MONGO_DATABASE_SESSION_COLLECTION }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "MONGO_DATABASE_SESSION_KEY=${{ secrets.MONGO_DATABASE_SESSION_KEY }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "MONGO_DATABASE_URI=${{ secrets.MONGO_DATABASE_URI }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "MONGO_DATABASE_USER=${{ secrets.MONGO_DATABASE_USER }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "OAUTH_ACCESS_SECRET_KEY=${{ secrets.OAUTH_ACCESS_SECRET_KEY }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "OAUTH_ACCESS_TOKEN_EXPIRES_IN=${{ secrets.OAUTH_ACCESS_TOKEN_EXPIRES_IN }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "OAUTH_CODE_EXPIRES_IN=${{ secrets.OAUTH_CODE_EXPIRES_IN }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "OAUTH_REFRESH_SECRET_KEY=${{ secrets.OAUTH_REFRESH_SECRET_KEY }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "OAUTH_REFRESH_TOKEN_EXPIRES_IN=${{ secrets.OAUTH_REFRESH_TOKEN_EXPIRES_IN }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "NODE_ENV=${{ vars.NODE_ENV }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "OAUTH_ISSUER=${{ vars.OAUTH_ISSUER }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "NGINX_PORT=${{ vars.NGINX_PORT }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "APP_PORT=${{ vars.APP_PORT }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          echo "OAUTH_VERSION=${{ vars.OAUTH_VERSION }}" >> apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
      
      - name: Create space environment file   
        run: |
          echo "SPACE_GOOGLE_CLIENT_ID=${{ secrets.SPACE_GOOGLE_CLIENT_ID }}" > apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SPACE_GOOGLE_CLIENT_SECRET=${{ secrets.SPACE_GOOGLE_CLIENT_SECRET }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SPACE_GITHUB_CLIENT_ID=${{ secrets.SPACE_GITHUB_CLIENT_ID }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SPACE_GITHUB_CLIENT_SECRET=${{ secrets.SPACE_GITHUB_CLIENT_SECRET }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SPACE_SMPARK_CLIENT_ID=${{ secrets.SPACE_SMPARK_CLIENT_ID }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SPACE_SMPARK_CLIENT_SECRET=${{ secrets.SPACE_SMPARK_CLIENT_SECRET }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "NEXTAUTH_SECRET=${{ secrets.SPACE_NEXTAUTH_SECRET }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "NODE_ENV=${{ vars.NODE_ENV }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SMPARK_OAUTH_BASE_URI=${{ vars.SMPARK_OAUTH_BASE_URI }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SMPARK_RESOURCE_BASE_URI=${{ vars.SMPARK_RESOURCE_BASE_URI }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SMPARK_CLIENT_REDIRECT_URI=${{ vars.SMPARK_CLIENT_REDIRECT_URI }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}
          echo "SPACE_VERSION=${{ vars.SPACE_VERSION }}" >> apps/smpark-space/.env.${{ vars.NODE_ENV }}

      - name: Get Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Print GitHub workspace path
        run: echo "GitHub workspace path is ${{ github.workspace }}"
      - name: Print Yarn cache directory path
        run: echo "Yarn cache directory path is ${{ steps.yarn-cache-dir-path.outputs.dir }}"

      - name: Cache Yarn and NX
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn
            .nx-cache
          key: ${{ runner.os }}-yarn-nx-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-yarn-nx-

      - name: Cache Next.js
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/apps/smpark-space/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          
      

      - name: Install dependencies
        run: yarn install --immutable

      - uses: nrwl/nx-set-shas@v4

      - run: yarn nx affected -t build:prod --parallel=3