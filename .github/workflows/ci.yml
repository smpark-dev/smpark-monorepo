name: CI

on:
  push:
    branches:
      - main
  pull_request: 
    branches:
      - main

jobs:
  setup:
    runs-on: self-hosted
    outputs:
      affected: ${{ steps.set-affected.outputs.affected }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20.14.0
      - name: Enable Corepack
        shell: pwsh
        run: corepack enable
      - uses: nrwl/nx-set-shas@v4
      - id: set-affected
        shell: pwsh
        run: |
          $affected = yarn nx show projects --type app --affected --json
          echo "affected=$affected" >> $env:GITHUB_OUTPUT

  build:
    needs: setup
    if: needs.setup.outputs.affected != '[]'
    runs-on: self-hosted
    strategy:
      matrix:
        project: ${{ fromJson(needs.setup.outputs.affected) }}
    steps:      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}      
      
      - name: Setup project
        shell: pwsh
        run: |
          if ("${{ matrix.project }}" -eq "smpark-oauth2.0") {
            Write-Output "Setting up smpark-oauth2.0"
            @"
            LOGIN_EXPIRES_IN=${{ secrets.LOGIN_EXPIRES_IN }}
            LOGIN_JWT_SECRET_KEY=${{ secrets.LOGIN_JWT_SECRET_KEY }}
            MONGO_DATABASE_NAME=${{ secrets.MONGO_DATABASE_NAME }}
            MONGO_DATABASE_PASSWORD=${{ secrets.MONGO_DATABASE_PASSWORD }}
            MONGO_DATABASE_SESSION_COLLECTION=${{ secrets.MONGO_DATABASE_SESSION_COLLECTION }}
            MONGO_DATABASE_SESSION_KEY=${{ secrets.MONGO_DATABASE_SESSION_KEY }}
            MONGO_DATABASE_URI=${{ secrets.MONGO_DATABASE_URI }}
            MONGO_DATABASE_USER=${{ secrets.MONGO_DATABASE_USER }}
            OAUTH_ACCESS_SECRET_KEY=${{ secrets.OAUTH_ACCESS_SECRET_KEY }}
            OAUTH_ACCESS_TOKEN_EXPIRES_IN=${{ secrets.OAUTH_ACCESS_TOKEN_EXPIRES_IN }}
            OAUTH_CODE_EXPIRES_IN=${{ secrets.OAUTH_CODE_EXPIRES_IN }}
            OAUTH_REFRESH_SECRET_KEY=${{ secrets.OAUTH_REFRESH_SECRET_KEY }}
            OAUTH_REFRESH_TOKEN_EXPIRES_IN=${{ secrets.OAUTH_REFRESH_TOKEN_EXPIRES_IN }}
            NODE_ENV=${{ vars.NODE_ENV }}
            OAUTH_ISSUER=${{ vars.OAUTH_ISSUER }}
            NGINX_PORT=${{ vars.NGINX_PORT }}
            APP_PORT=${{ vars.APP_PORT }}
            OAUTH_VERSION=${{ vars.OAUTH_VERSION }}
            "@ | Set-Content apps/smpark-oauth2.0/.env.${{ vars.NODE_ENV }}
          }
          elseif ("${{ matrix.project }}" -eq "smpark-space") {
            Write-Output "Setting up smpark-space"
            @"
            SPACE_GOOGLE_CLIENT_ID=${{ secrets.SPACE_GOOGLE_CLIENT_ID }}
            SPACE_GOOGLE_CLIENT_SECRET=${{ secrets.SPACE_GOOGLE_CLIENT_SECRET }}
            SPACE_GITHUB_CLIENT_ID=${{ secrets.SPACE_GITHUB_CLIENT_ID }}
            SPACE_GITHUB_CLIENT_SECRET=${{ secrets.SPACE_GITHUB_CLIENT_SECRET }}
            SPACE_SMPARK_CLIENT_ID=${{ secrets.SPACE_SMPARK_CLIENT_ID }}
            SPACE_SMPARK_CLIENT_SECRET=${{ secrets.SPACE_SMPARK_CLIENT_SECRET }}
            NEXTAUTH_SECRET=${{ secrets.SPACE_NEXTAUTH_SECRET }}
            NODE_ENV=${{ vars.NODE_ENV }}
            NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}
            SMPARK_OAUTH_BASE_URI=${{ vars.SMPARK_OAUTH_BASE_URI }}
            SMPARK_RESOURCE_BASE_URI=${{ vars.SMPARK_RESOURCE_BASE_URI }}
            SMPARK_CLIENT_REDIRECT_URI=${{ vars.SMPARK_CLIENT_REDIRECT_URI }}
            SPACE_VERSION=${{ vars.SPACE_VERSION }}
            "@ | Set-Content apps/smpark-space/.env.${{ vars.NODE_ENV }}
            
            # LFS setup for smpark-space
            git lfs pull
          }

      - name: Cache LFS
        if: matrix.project == 'smpark-space'
        uses: actions/cache@v4
        with:
          path: .git/lfs/objects
          key: ${{ runner.os }}-lfs-${{ hashFiles('.gitattributes') }}
          restore-keys: |
            ${{ runner.os }}-lfs-

      - name: Cache Next.js
        if: matrix.project == 'smpark-space'
        uses: actions/cache@v4
        with:
          path: apps/smpark-space/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('apps/smpark-space/**.[jt]s', 'apps/smpark-space/**.[jt]sx') }}

      - name: Cache NX
        uses: actions/cache@v4
        with:
          path: .nx-cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Lint 
        shell: pwsh
        run: yarn nx lint ${{ matrix.project }}

      - name: Build
        shell: pwsh
        run: yarn nx build:prod ${{ matrix.project }}
